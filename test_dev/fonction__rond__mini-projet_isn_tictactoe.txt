def rond(event):
    r=45                        #rayon du cercle
    largeur_grille = 375        #Largeur de la grille de jeu
    hauteur_grille = 375        #Hauteur de la grille de jeu 
    x=int(event.x)              #On récupère les coordonnées (x)
    y=int(event.y)              #on récupère les coordonnées (y)
    global cmpt_clic
    #Conditions permetant d'identifier la case cliquée, modifications des coordonnées, affectation des valeurs du tableau.
    if x<largeur_grille/3 and y<hauteur_grille/3:       #si x < 1/3 de la largeur de la grille et que y < 1/3 de la hauteur de la grille, alors:
        x=(largeur_grille/3)/2                          #on modifie les coordonées en : 1/3 de la largeur/hauteur de la grille /2 (ceci est le centre de la case)
        y=(hauteur_grille/3)/2                          
        colonne = 0                                     #on indique la ligne correspandant à cette case dans le tableau
        ligne = 0                                       #on indique la colonne correspondant à cette case dans le tableau
        cmpt_clic+=1                                    #on incrémente le compteur de clique de 1
    if x>largeur_grille/3 and x<(largeur_grille/3)*2 and y<hauteur_grille/3:
        x=largeur_grille/2
        y=(hauteur_grille/3)/2
        ligne = 0
        colonne = 1
        cmpt_clic+=1
    if x>(largeur_grille/3)*2 and y<hauteur_grille/3:                                                                       
        x=((largeur_grille/3)*2)+(largeur_grille/3)/2
        y=(hauteur_grille/3)/2
        ligne = 0
        colonne = 2
        cmpt_clic+=1
    if x<largeur_grille/3 and y>hauteur_grille/3 and y<(hauteur_grille/3)*2:
        x=(largeur_grille/3)/2
        y=hauteur_grille/2
        ligne = 1
        colonne = 0
        cmpt_clic+=1
    if x>largeur_grille/3 and x<(largeur_grille/3)*2 and y>hauteur_grille/3 and y<(hauteur_grille/3)*2:
        x=largeur_grille/2
        y=hauteur_grille/2
        ligne = 1
        colonne = 1
        cmpt_clic+=1
    if x>(largeur_grille/3)*2 and y>hauteur_grille/3 and y<(hauteur_grille/3)*2:
        x=((largeur_grille/3)*2)+(largeur_grille/3)/2
        y=hauteur_grille/2
        ligne = 1
        colonne = 2
        cmpt_clic+=1
    if x<largeur_grille/3 and y>(hauteur_grille/3)*2:
        x=(largeur_grille/3)/2
        y=((hauteur_grille/3)*2)+(hauteur_grille/3)/2
        ligne = 2
        colonne = 0
        cmpt_clic+=1
    if x>largeur_grille/3 and x<(largeur_grille/3)*2 and y>(hauteur_grille/3)*2:
        x=largeur_grille/2
        y=((hauteur_grille/3)*2)+(hauteur_grille/3)/2
        ligne = 2
        colonne = 1
        cmpt_clic+=1
    if x>(largeur_grille/3)*2 and y>(hauteur_grille/3)*2:
        x=((largeur_grille/3)*2)+(largeur_grille/3)/2
        y=((hauteur_grille/3)*2)+(hauteur_grille/3)/2
        ligne = 2
        colonne = 2
        cmpt_clic+=1
    if x == largeur_grille/3 or x == (largeur_grille/3)*2 or y == hauteur_grille/3 or y == (hauteur_grille/3)*2:    #si les coordonées sont égales aux valeurs repères, le programme n'incrémente pas le compteur de clique et n'affiche pas le symbole.
        cmpt_clic+=0
    if cmpt_clic %2 == 0:
        croix(event)
    if table[ligne][colonne] == "X" and table[ligne][colonne] != "0":   #on verifie si la case cliquée n'est pas déjà jouée, si tel est le cas on ne créer pas de symbole
        table[ligne][colonne] = table[ligne][colonne]
        print "error"
    else:
        table[ligne][colonne] = "R"     #on indique au programme que la case est jouée est que c'est un cercle qui l'occupe en indiquant un "R" dans le case du tableau prévue
        dessin.create_oval(x-r,y-r,x+r,y+r,width = 3, outline = "yellow")       #créer et affiche le cercle au centre de la case cliquée.
        print cmpt_clic
        if cmpt_clic >=5:   #si le compteur de clics est supérieur ou égal à 1 on vérifie si un joueur a gagner
            test_croix()